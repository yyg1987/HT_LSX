!function (e, t, r) { e.migrateVersion = "1.4.1"; var n = {}; function o(r) { var o = t.console; n[r] || (n[r] = !0, e.migrateWarnings.push(r), o && o.warn && !e.migrateMute && (o.warn("JQMIGRATE: " + r), e.migrateTrace && o.trace && o.trace())) } function a(t, r, n, a) { if (Object.defineProperty) try { return void Object.defineProperty(t, r, { configurable: !0, enumerable: !0, get: function () { return o(a), n }, set: function (e) { o(a), n = e } }) } catch (e) { } e._definePropertyBroken = !0, t[r] = n } e.migrateWarnings = [], t.console && t.console.log && t.console.log("JQMIGRATE: Migrate is installed" + (e.migrateMute ? "" : " with logging active") + ", version " + e.migrateVersion), e.migrateTrace === r && (e.migrateTrace = !0), e.migrateReset = function () { n = {}, e.migrateWarnings.length = 0 }, "BackCompat" === document.compatMode && o("jQuery is not compatible with Quirks Mode"); var i = e("<input/>", { size: 1 }).attr("size") && e.attrFn, s = e.attr, c = e.attrHooks.value && e.attrHooks.value.get || function () { return null }, u = e.attrHooks.value && e.attrHooks.value.set || function () { return r }, l = /^(?:input|button)$/i, d = /^[238]$/, p = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i, f = /^(?:checked|selected)$/i; a(e, "attrFn", i || {}, "jQuery.attrFn is deprecated"), e.attr = function (t, n, a, c) { var u = n.toLowerCase(), h = t && t.nodeType; return c && (s.length < 4 && o("jQuery.fn.attr( props, pass ) is deprecated"), t && !d.test(h) && (i ? n in i : e.isFunction(e.fn[n]))) ? e(t)[n](a) : ("type" === n && a !== r && l.test(t.nodeName) && t.parentNode && o("Can't change the 'type' of an input or button in IE 6/7/8"), !e.attrHooks[u] && p.test(u) && (e.attrHooks[u] = { get: function (t, n) { var o, a = e.prop(t, n); return !0 === a || "boolean" != typeof a && (o = t.getAttributeNode(n)) && !1 !== o.nodeValue ? n.toLowerCase() : r }, set: function (t, r, n) { var o; return !1 === r ? e.removeAttr(t, n) : ((o = e.propFix[n] || n) in t && (t[o] = !0), t.setAttribute(n, n.toLowerCase())), n } }, f.test(u) && o("jQuery.fn.attr('" + u + "') might use property instead of attribute")), s.call(e, t, n, a)) }, e.attrHooks.value = { get: function (e, t) { var r = (e.nodeName || "").toLowerCase(); return "button" === r ? c.apply(this, arguments) : ("input" !== r && "option" !== r && o("jQuery.fn.attr('value') no longer gets properties"), t in e ? e.value : null) }, set: function (e, t) { var r = (e.nodeName || "").toLowerCase(); if ("button" === r) return u.apply(this, arguments); "input" !== r && "option" !== r && o("jQuery.fn.attr('value', val) no longer sets properties"), e.value = t } }; var h, v, g, y = e.fn.init, m = e.find, b = e.parseJSON, w = /^\s*</, j = /\[(\s*[-\w]+\s*)([~|^$*]?=)\s*([-\w#]*?#[-\w#]*)\s*\]/, x = /\[(\s*[-\w]+\s*)([~|^$*]?=)\s*([-\w#]*?#[-\w#]*)\s*\]/g, k = /^([^<]*)(<[\w\W]+>)([^>]*)$/; for (g in e.fn.init = function (t, n, a) { var i, s; return t && "string" == typeof t && !e.isPlainObject(n) && (i = k.exec(e.trim(t))) && i[0] && (w.test(t) || o("$(html) HTML strings must start with '<' character"), i[3] && o("$(html) HTML text after last tag is ignored"), "#" === i[0].charAt(0) && (o("HTML string cannot start with a '#' character"), e.error("JQMIGRATE: Invalid selector string (XSS)")), n && n.context && n.context.nodeType && (n = n.context), e.parseHTML) ? y.call(this, e.parseHTML(i[2], n && n.ownerDocument || n || document, !0), n, a) : (s = y.apply(this, arguments), t && t.selector !== r ? (s.selector = t.selector, s.context = t.context) : (s.selector = "string" == typeof t ? t : "", t && (s.context = t.nodeType ? t : n || document)), s) }, e.fn.init.prototype = e.fn, e.find = function (e) { var t = Array.prototype.slice.call(arguments); if ("string" == typeof e && j.test(e)) try { document.querySelector(e) } catch (r) { e = e.replace(x, function (e, t, r, n) { return "[" + t + r + '"' + n + '"]' }); try { document.querySelector(e), o("Attribute selector with '#' must be quoted: " + t[0]), t[0] = e } catch (e) { o("Attribute selector with '#' was not fixed: " + t[0]) } } return m.apply(this, t) }, m) Object.prototype.hasOwnProperty.call(m, g) && (e.find[g] = m[g]); e.parseJSON = function (e) { return e ? b.apply(this, arguments) : (o("jQuery.parseJSON requires a valid JSON string"), null) }, e.uaMatch = function (e) { e = e.toLowerCase(); var t = /(chrome)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || e.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || []; return { browser: t[1] || "", version: t[2] || "0" } }, e.browser || (v = {}, (h = e.uaMatch(navigator.userAgent)).browser && (v[h.browser] = !0, v.version = h.version), v.chrome ? v.webkit = !0 : v.webkit && (v.safari = !0), e.browser = v), a(e, "browser", e.browser, "jQuery.browser is deprecated"), e.boxModel = e.support.boxModel = "CSS1Compat" === document.compatMode, a(e, "boxModel", e.boxModel, "jQuery.boxModel is deprecated"), a(e.support, "boxModel", e.support.boxModel, "jQuery.support.boxModel is deprecated"), e.sub = function () { function t(e, r) { return new t.fn.init(e, r) } e.extend(!0, t, this), t.superclass = this, t.fn = t.prototype = this(), t.fn.constructor = t, t.sub = this.sub, t.fn.init = function (n, o) { var a = e.fn.init.call(this, n, o, r); return a instanceof t ? a : t(a) }, t.fn.init.prototype = t.fn; var r = t(document); return o("jQuery.sub() is deprecated"), t }, e.fn.size = function () { return o("jQuery.fn.size() is deprecated; use the .length property"), this.length }; var Q = !1; e.swap && e.each(["height", "width", "reliableMarginRight"], function (t, r) { var n = e.cssHooks[r] && e.cssHooks[r].get; n && (e.cssHooks[r].get = function () { var e; return Q = !0, e = n.apply(this, arguments), Q = !1, e }) }), e.swap = function (e, t, r, n) { var a, i, s = {}; for (i in Q || o("jQuery.swap() is undocumented and deprecated"), t) s[i] = e.style[i], e.style[i] = t[i]; for (i in a = r.apply(e, n || []), t) e.style[i] = s[i]; return a }, e.ajaxSetup({ converters: { "text json": e.parseJSON } }); var M = e.fn.data; e.fn.data = function (t) { var n, a, i = this[0]; return !i || "events" !== t || 1 !== arguments.length || (n = e.data(i, t), a = e._data(i, t), n !== r && n !== a || a === r) ? M.apply(this, arguments) : (o("Use of jQuery.fn.data('events') is deprecated"), a) }; var C = /\/(java|ecma)script/i; e.clean || (e.clean = function (t, r, n, a) { r = (r = !(r = r || document).nodeType && r[0] || r).ownerDocument || r, o("jQuery.clean() is deprecated"); var i, s, c, u, l = []; if (e.merge(l, e.buildFragment(t, r).childNodes), n) for (c = function (e) { if (!e.type || C.test(e.type)) return a ? a.push(e.parentNode ? e.parentNode.removeChild(e) : e) : n.appendChild(e) }, i = 0; null != (s = l[i]); i++)e.nodeName(s, "script") && c(s) || (n.appendChild(s), void 0 !== s.getElementsByTagName && (u = e.grep(e.merge([], s.getElementsByTagName("script")), c), l.splice.apply(l, [i + 1, 0].concat(u)), i += u.length)); return l }); var S = e.event.add, T = e.event.remove, N = e.event.trigger, H = e.fn.toggle, A = e.fn.live, L = e.fn.die, O = e.fn.load, $ = "ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess", F = new RegExp("\\b(?:" + $ + ")\\b"), R = /(?:^|\s)hover(\.\S+|)\b/, E = function (t) { return "string" != typeof t || e.event.special.hover ? t : (R.test(t) && o("'hover' pseudo-event is deprecated, use 'mouseenter mouseleave'"), t && t.replace(R, "mouseenter$1 mouseleave$1")) }; e.event.props && "attrChange" !== e.event.props[0] && e.event.props.unshift("attrChange", "attrName", "relatedNode", "srcElement"), e.event.dispatch && a(e.event, "handle", e.event.dispatch, "jQuery.event.handle is undocumented and deprecated"), e.event.add = function (e, t, r, n, a) { e !== document && F.test(t) && o("AJAX events should be attached to document: " + t), S.call(this, e, E(t || ""), r, n, a) }, e.event.remove = function (e, t, r, n, o) { T.call(this, e, E(t) || "", r, n, o) }, e.each(["load", "unload", "error"], function (t, r) { e.fn[r] = function () { var e = Array.prototype.slice.call(arguments, 0); return "load" === r && "string" == typeof e[0] ? O.apply(this, e) : (o("jQuery.fn." + r + "() is deprecated"), e.splice(0, 0, r), arguments.length ? this.bind.apply(this, e) : (this.triggerHandler.apply(this, e), this)) } }), e.fn.toggle = function (t, r) { if (!e.isFunction(t) || !e.isFunction(r)) return H.apply(this, arguments); o("jQuery.fn.toggle(handler, handler...) is deprecated"); var n = arguments, a = t.guid || e.guid++, i = 0, s = function (r) { var o = (e._data(this, "lastToggle" + t.guid) || 0) % i; return e._data(this, "lastToggle" + t.guid, o + 1), r.preventDefault(), n[o].apply(this, arguments) || !1 }; for (s.guid = a; i < n.length;)n[i++].guid = a; return this.click(s) }, e.fn.live = function (t, r, n) { return o("jQuery.fn.live() is deprecated"), A ? A.apply(this, arguments) : (e(this.context).on(t, this.selector, r, n), this) }, e.fn.die = function (t, r) { return o("jQuery.fn.die() is deprecated"), L ? L.apply(this, arguments) : (e(this.context).off(t, this.selector || "**", r), this) }, e.event.trigger = function (e, t, r, n) { return r || F.test(e) || o("Global events are undocumented and deprecated"), N.call(this, e, t, r || document, n) }, e.each($.split("|"), function (t, r) { e.event.special[r] = { setup: function () { var t = this; return t !== document && (e.event.add(document, r + "." + e.guid, function () { e.event.trigger(r, Array.prototype.slice.call(arguments, 1), t, !0) }), e._data(this, r, e.guid++)), !1 }, teardown: function () { return this !== document && e.event.remove(document, r + "." + e._data(this, r)), !1 } } }), e.event.special.ready = { setup: function () { this === document && o("'ready' event is deprecated") } }; var J = e.fn.andSelf || e.fn.addBack, B = e.fn.find; if (e.fn.andSelf = function () { return o("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()"), J.apply(this, arguments) }, e.fn.find = function (e) { var t = B.apply(this, arguments); return t.context = this.context, t.selector = this.selector ? this.selector + " " + e : e, t }, e.Callbacks) { var D = e.Deferred, _ = [["resolve", "done", e.Callbacks("once memory"), e.Callbacks("once memory"), "resolved"], ["reject", "fail", e.Callbacks("once memory"), e.Callbacks("once memory"), "rejected"], ["notify", "progress", e.Callbacks("memory"), e.Callbacks("memory")]]; e.Deferred = function (t) { var r = D(), n = r.promise(); return r.pipe = n.pipe = function () { var t = arguments; return o("deferred.pipe() is deprecated"), e.Deferred(function (o) { e.each(_, function (a, i) { var s = e.isFunction(t[a]) && t[a]; r[i[1]](function () { var t = s && s.apply(this, arguments); t && e.isFunction(t.promise) ? t.promise().done(o.resolve).fail(o.reject).progress(o.notify) : o[i[0] + "With"](this === n ? o.promise() : this, s ? [t] : arguments) }) }), t = null }).promise() }, r.isResolved = function () { return o("deferred.isResolved is deprecated"), "resolved" === r.state() }, r.isRejected = function () { return o("deferred.isRejected is deprecated"), "rejected" === r.state() }, t && t.call(r, r), r } } }(jQuery, window);